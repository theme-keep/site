[{"title":"Keep v3.0.0 Released","url":"/2020/11/Keep-v3-0-0-Released/","content":"\n增加首屏展示功能。\nstyle:# First screenfirst_screen:  enable: true  description: Keep writing and Keep loving.\n\n增加第三方社交链接功能。\nsocial_contact:enable: falselinks:    github: https://github.com/XPoet    weixin: https://xxx.com    ......\n\n增加在线字号调整功能。\n\n重构右下角侧边工具栏。\n\n增加自由切换内容区域宽度功能。\n\n升级 fontawesome 图标库。\n\n增加设置 CDN 加速功能。\ncdn:  enable: true\n\n增加底部起始年份设置功能。\nfooter:  since: 2020\n\n优化 Markdown 样式。\n\n移除原 ILS 的 magic 配置项 和 normal 风格。\n\n美化友链页面样式并采用 _data 来存储。\nlinks.yml\n- name: XPoet  link: https://xpoet.cn/  description: 懒惰是程序员第一生产力  avatar: https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg- name: 不知名艺术家  link: https://jinzhanqi.com/  description: love artist, love code.  avatar: https://s3.ax1x.com/2020/11/17/DVvkB4.jpg- name: xxx  link: https://xxx.com/  description: xxx  avatar: xxx\n\n首页文章块显示该文章创建于多久之前。\n\n文章内容页增加版权信息模块。\n\n文章内容页增加大图查看器。\n\n……\n\n\n","categories":["更新日志"],"tags":["Keep","更新日志"]},{"title":"Keep v3.0.3 Released","url":"/2020/12/Keep-v3-0-3-Released/","content":"\n修复用户无法使用自己图片作为 头像(avatar) 和 网站图标(favicon) 的 Bug。\n\n主题配置文件增加 favicon 和 avatar 配置选项，可使用本地图片或图片外链。\nstyle:  # Theme primary color  primary_color: &quot;#CC3333&quot;  # Avatar (You can use local image or image external link)  avatar: https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg  # Favicon (You can use local image or image external link)  favicon: images/logo.svg\n\n重构 CSS 字体单位，em -&gt; rem，更合理，更协调，更优雅。\n\n\n","categories":["更新日志"],"tags":["Keep","更新日志"]},{"title":"Keep v3.0.4 Released","url":"/2020/12/Keep-v3-0-4-Released/","content":"\n优化首屏描述的字体样式，调整行高和大小。\n\n主题配置文件增加首屏背景图片 background_img 配置选项，可使用本地图片或图片外链。\nfirst_screen:  enable: true  + background_img: /images/bg.svg  description: Keep writing and Keep loving.\n修改 RSS 图标缺失的 Bug。\n\n优化友链页面在移动端的样式。\n\n\n","categories":["更新日志"],"tags":["Keep","更新日志"]},{"title":"Keep v3.1.0 Released","url":"/2021/01/Keep-v3-1-0-Released/","content":"\n支持 PJAX 功能，更好浏览体验。\n# ---------------------------------------------------------------------------------------# PJAX# ---------------------------------------------------------------------------------------pjax:  enable: false\n\n优化搜索功能及样式。\n\n优化首屏样式。\n\n文章页点击图片增加动画。\n\n重构部分 CSS 代码。\n\n增强用户体验。\n\n\n","categories":["更新日志"],"tags":["Keep","更新日志"]},{"title":"Keep v3.1.1 Released","url":"/2021/01/Keep-v3-1-1-Released/","content":"\n增加 PJAX 加载进度条提示。\n\n优化 PJAX 配置项。\n\n修复 hexo g stylus 报错。\n\n增强用户体验。\n\n\n","categories":["更新日志"],"tags":["Keep","更新日志"]},{"title":"Keep v3.1.2 Released","url":"/2021/01/Keep-v3-1-2-Released/","content":"\n增加图片懒加载功能。\n# ---------------------------------------------------------------------------------------# Lazyload image# ---------------------------------------------------------------------------------------lazyload:  enable: false\n\n增加 PJAX 加载动画图标。\n\n优化顶部 PJAX 加载进度条样式。\n\n文章页点击图片增加动画。\n\n删除主题中部分冗余代码。\n\n增强用户体验。\n\n\n","categories":["更新日志"],"tags":["Keep","更新日志"]},{"title":"Keep 主题使用指南","url":"/2020/04/Keep-%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","content":"如你所见，Keep 主题界面设计十分简洁、大气，同时也功能齐全、不失优雅，这正是 Keep 主题的开发理念。也曾尝试过花里胡哨，发现不仅配置繁琐、容易审美疲劳，而且背驰了写博客的初衷，记录生活、展示文字，应该才是搭建博客网站的最终追求，为此 Keep 主题应运而生。简约轻快、化繁为简、配置简单、突出内容、长期维护，如果你也喜欢或认可这些特点，一起来探索吧~\n\n\n文档 | Documents在使用 Keep 主题过程中，请仔细阅读官方使用文档，绝大部分问题，都能在文档里找到参考。\n\nKeep 主题 - 官方文档\n\nKeep 主题 - 快速开始\n\nKeep 主题 - 配置指南\n\nKeep 主题 - 进阶设置\n\n\n贡献 | ContributionKeep 目前是很年轻的 Hexo 主题，有着很大的提升空间，极其欢迎小伙伴们各种形式的贡献，包括但不限于：美化样式、增加功能、改进代码、提升性能、修复 Bug 等。\n参与代码贡献必读 Keep 主题贡献准则\n反馈 | Feedback遇到难于解决的问题、Bug 或有新的需求建议，尽量去 GitHub 提 Issue，也许你提的 Issue 能帮助遇到同样问题的小伙伴。\n或扫描下方二维码，加入微信交流群，与群里小伙伴一起交流~\n\n\n如果上面的进群二维码失效，可关注公众号《前端鼓励师》，添加作者微信，再由作者拉你进群~\n\n\n版权 | Copyright开源项目，维护不易，使用本主题，敬请保留底部的版权信息 ❤️示例：Powered by Hexo | Theme Keep v3.4.2\n许可 | LicenseMIT Copyright (c) 2020 XPoet\n推荐 | RecommendPicX 图床神器 专为静态博客而生，谁用谁知道！\n\n基于 GitHub，图片外链使用 jsDelivr 进行 CDN 加速。\n免下载、免安装，打开网站即可直接使用。\n免费、稳定、高效。\n\n","categories":["Keep"],"tags":["Keep","Hexo"]},{"title":"Keep 主题配置指南","url":"/2020/11/Keep-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/","content":"本文详细讲解 Keep 主题配置文件 _config.yml 如何使用，附带图文教程，目录对应着 _config.yml 的配置项，方便查阅。\n在使用过程中有任何疑问，请在评论区留言。\n\n\nbase_infobase_info:  title: Keep  author: Keep team  url: https://keep.xpoet.cn/\n\n请在此处正确填写你的博客网站基本信息：\n\ntitle 你的网站名称（将显示在网站头部，如下图）\n\nauthor 你的昵称（将显示在网站底部和文章内容页，如下图）\n\nurl 你的博客网站域名\n\n\nstylestyle:  # Theme primary color  primary_color: &quot;#0066CC&quot;  # Image align position, value: left | center  img_position: left  # Left side width  left_side_width: 260px  # Mouse hover  hover:    shadow: true # shadow effect when the mouse hover    scale: false # scale effect when the mouse hover  # First screen  first_screen:    enable: true    description: Welcome to use Hexo theme Keep\n\n此处设置博客网站基本样式：\nprimary_color设置网站主题色，支持 rgb、rgba、十六进制格式，例如：rgb(0, 102, 204)、rgba(0, 102, 204,0.8)、#0066cc。建议使用 Web 安全色。\nimg_position设置文章内容页的图片排列位置，默认 left（靠左），可选：left、center（居中）。\nleft_side_width\n设置左侧 TOC 目录结构模块的宽度，一般情况下，你无需更改。如需设置，请保持单位为 px。\n示例：\n\nhover设置鼠标悬浮时的样式，可开启 shadow 和 scale 效果。\n\nshadow 阴影效果\nscale 缩放效果\n\nfirst_screenKeep v3.0.0 新增的网站首屏模块，开启后将显示在网站首页。\n\nenable 是否开启首屏\nbackground_img 首屏背景图片\ndescription 首屏描述\n首屏开启状态示例：\n\nsocial_contactsocial_contact:  enable: false  links:    github: # your GitHub URL    wechat: # your WeChat QR-Code URL    weibo: # your WeiBo URL    twitter: # your twitter URL    facebook: # your facebook URL    email: # your email\n\n配置社交网络链接。注意：仅在首屏开启状态下才生效！\nmenumenu:  Home: /  Archives: /archives  # Categories: /categories  # Tags: /tags  # Links: /links  # About: /about  # ...\n\n网站头部导航菜单，如需新增导航菜单，按上面格式填写，同时需要创建相对应的 Hexo 页面。\n\n新创建的 Hexo 项目并没有 categories（分类）、tags（标签）、about（关于）、links（友链）等页面，需要自己手动创建。\n以创建「 about（关于）」页面为例：\n\n在 Hexo 博客目录下执行命令 hexo new page about ，即可在 source 目录下生成 about 文件夹。\n\n在 Keep 主题配置文件的 menu 下添加 about。\nmenu:  Home: /  Archives: /archives  # Categories: /categories  # Tags: /tags  # Links: /links  About: /about\n打开博客目录下 /source/about/index.md 文件填写内容，即可显示在页面上。支持 Markdown 和 HTML 格式；comment: true 表示该页面开启评论功能。参考如下：\n---title: aboutdate: 2020-03-19 14:59:53comment: true---## About me- XPoet「 Keep core developer 」...  ...  ...  ...\n\n注意自动生成的 title 属性不要修改！例如：title: about 无需修改！\n\n\nrssrss:  enable: false\n\n\n启用 RSS 订阅功能，需先在 Hexo 博客根目录下安装插件 hexo-generator-feed 。\nnpm install hexo-generator-feed\n\n在 Hexo 配置文件 _config.yml 增加如下配置项。\n# Feed Atom# npm install hexo-generator-feedfeed:  type: atom  path: atom.xml  limit: 20\n\nRSS 订阅功能开启后，将会在右下角工具按钮组里面显示RSS 按钮。\n\n\ncommentKeep 主题目前内置两款评论插件：Valine 和 Gitalk，你只能使用其中一款，如果两款评论插件的 enable 都设为了 true，将使用 Valine。\nValineValine 诞生于 2017 年 8 月 7 日，是一款基于 LeanCloud 的快速、简洁且高效的无后端评论系统。\n详情查看：\n\nhttps://github.com/xCss/Valine/\nhttps://valine.js.org/\n\n在 Keep 中如何使用：\n\n请先 登录 或 注册 LeanCloud，进入控制台后点击左下角创建应用。\n\n\n应用创建好以后，进入刚刚创建的应用，选择左下角的设置 &gt; 应用Key，然后就能看到你的 APP ID 和 APP Key 了。\n\n\n在 Keep 主题配置文件填写必要参数信息（APP ID、APP Key 等），示例如下。\nvaline:  enable: true  appid: ih2nzxxxxxxxxxxxxxxxxxxxxxx  appkey: gdf6666666666666666666666666  meta: [&quot;nick&quot;, &quot;mail&quot;, &quot;link&quot;]  placeholder: 😜 尽情吐槽吧~\n\n\nappid 必填。\nappkey 必填。\nmeta 可填，表示评论框的要填写的信息（昵称、邮箱、链接）。\nplaceholder 可填，表示评论框的在还没输入内容时的显示的信息。\n\n\nValine 评论插件效果图。\n\n\nGitalkGitalk，一个基于 Github Issue 和 Preact 开发的评论插件。\n详情查看：\n\nhttps://github.com/gitalk/gitalk\n\n在 Keep 中如何使用：\n\n新建 GitHub OAuth App注册或登录 GitHub，创建新的 OAuth App，链接：https://github.com/settings/applications/new ，其中 Homepage URL 和 Authorization callback URL 均填写自己的域名即可。\n把 Client ID 和 Client Secret 保存起来。\n\n\n新建 GitHub 仓库注册或登录 GitHub，创建一个新的仓库（repository），并打开 Issues（自己手动增加一个 Issue），用于存储评论内容。\n\n把自己的 GitHub 用户名称、仓库名称 、OAuth App 的 Client ID 、Client Secret 分别填写在主题配置文件里，如下示例。\ngitalk:  enable: true  github_id: XPoet  repository: ils-site-comments  client_id: cdfffffffffffffffffffff  client_secret: f4b55555555555555555555555555555\n\nGitalk 评论插件效果图。\n\n\nwebsite_countKeep 主题内置“不蒜子”计数，无需额外配置，选择你要开启的计数项即可。\nbusuanzi_count:  enable: true  site_uv: true  site_pv: true  page_pv: true\n\n\nsite_uv 网站访问人数\nsite_pv 网站总访问量\npage_pv 文章阅读次数\n\n计数效果图如下：\nlocal_search博客网站文章的搜索功能，非常实用，强烈建议开启。开启后，右上角将出现搜索按钮。\n\n在 Keep 主题中如何使用：\n\n启用本地搜索功能，需在 Hexo 博客根目录下安装插件 hexo-generator-searchdb 。\nnpm install hexo-generator-searchdb\n\n修改主题配置文件 _config.yml 的 local_search 配置项。\nlocal_search:  enable: true  trigger: auto  unescape: false  preload: true\n\n\ntrigger 搜索触发方式，输入关键字后会触发搜索，可选 auto（自动）或 manual（手动）。\n\nauto 每输入或删除一个字符后，自动触发搜索。\nmanual 每输入或删除一个字符后，需要按回车键触发搜索。\n\n\nunescape 转义 HTML 字符串为可读字符串。\n\npreload 在页面加载时预加载搜索数据。\n\n\n\n搜索功能效果图。\n\n\n\npost_wordcount文章字数统计和阅读时长统计功能。\n如何使用：\n\n如需启用，请先安装 Hexo 插件：hexo-wordcount。在博客根目录下使用 npm 命令安装: npm i hexo-wordcount --save\n\n在主题配置文件中开启。\npost_wordcount:  enable: true  wordcount: true  min2read: true\n\n\nwordcount 文章字数统计。\nmin2read 阅读时长统计。\n\n\n效果图。\n\n\nhome_article首页文章块底部的显示设置。\nhome_article:  category:    enable: true    limit: 3  tag:    enable: true    limit: 5\n\n\nenable 表示是否开启显示。\nlimit 表示显示的最大个数。\n效果图。\n\ncode_copy代码复制功能。\ncode_copy:  enable: true  style: default # values: default | mac\n\n\nenable 是否开启。\n\nstyle 代码复制的样式，可选 default 和 mac。\n\ndefault 效果图\n\nmac 效果图\n\n\n\n\nside_tools是否开启右下角的工具按钮。\nside_tools:  enable: true\n\n\n未展开状态\n\n展开状态\n\n\nback2top一键快速 回到顶部 和 到达底部 功能。\nback2top:  enable: true\n\n\n点击 ↑ 上箭头 即可快速回到网站顶部。\n点击 ↓ 下箭头 即可快速到达网站底部。\n\n\ntoc文章目录结构，非常实用的功能，方便查看文章结构和跳转，强烈建议开启。\ntoc:  enable: true  # Automatically add list number to toc.  number: true  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.  expand_all: true\n\n\nnumber 目录结构是否显示数字序号。\n\nexpand_all 是否展开所有目录结构。\n\nexpand_all: true 初始已展开所有的目录结构。\nexpand_all: false 边滚动页面边展开对应的位置的目录。\n\n\n\ncopyright_infocopyright_info:  enable: true\n\n文章内容页的版权信息模块。\n\ncdncdn:  enable: true\n\n开启资源 CDN 加速。\nfooterfooter:  since: 2020\n\n网站最底部的信息展示设置。\n\nsince 设置网站起始年份\n示例\n\n","categories":["Keep教程"],"tags":["Keep","配置指南"]},{"title":"Keep 代码贡献指南","url":"/2020/11/Keep-%E4%BB%A3%E7%A0%81%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/","content":"参与 Keep 主题开发非常简单，总体框架作者已经搭建好了，你只需在此基础上添砖加瓦，包括但不限于：美化样式、增加功能、改进代码、 修复 Bug 等。\n期待你的贡献！\n\n\nKeep 目录结构&#x2F;keep├── _config.yml├── languages├── layout├── scripts└── source\n\n\n_config.ymlKeep 主题的配置文件，在此处添加新的配置项。\n\nlanguagesKeep 主题的语言文件夹，在此处添加新的语言配置项，目前只有中文和英文，欢迎添加其他语言。\n\nlayoutKeep 主题的布局文件夹，用于存放主模板文件，决定网站内容的呈现方式。请在此处添加新的模板，参考 模板 以获得更多信息。\n\nscripts脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，参考 插件 以获得更多信息。\n\nsource资源文件夹，除了模板以外的资源，例如 CSS、JavaScript、图片、字体文件等，都放在这个文件夹中。\n\n\nKeep 技术栈\nEJSKeep 使用 EJS 模板引擎，你只需掌握几个 EJS 简单的语法，便可上手参考开发。参考：https://ejs.bootcss.com/\n\nStylusKeep 使用 Stylus CSS 预处理器，使得 CSS 写法更灵活，你只需掌握 Stylus 基本语法，便可上手参考开发。参考：https://stylus.bootcss.com/\n\n\nKeep Plan Todo\n 图片懒加载\n 文章点赞功能\n 文章打赏\n 在线更改字体\n…\n\n参与开发流程假设你想为 Keep 主题增加 “文章版本信息” 模块，可参考下列流程：\nFork Keep repository请先 Fork Keep 代码仓库到你的 GitHub，然后通过 Git 克隆你自己的 GitHub 账号下的 Keep 仓库。\nClone Keep使用 git 克隆你 GitHub 账号下的 Keep 到 Hexo 项目中。\ngit clone --depth&#x3D;1 git@github.com:你的GitHub用户名&#x2F;hexo-theme-keep.git themes&#x2F;keep\n\n启动 Hexo 服务启动 Hexo 服务，在开发过程中，实时查看 Keep 主题页面效果。\nhexo s -o\n\n创建 Keep 模板文件\n请在 layout 文件夹里创建 Keep 模板文件，以 “文章版本信息” 模块为例，因为是一个比较小的模块，所以在 layout/_partial 文件夹中创建 copyright-info.ejs 这个新模板文件。\n\n在 copyright-info.ejs 文件中编写你的 HTML 结构代码，边修改边在浏览器查看效果。\n\n\n创建 Keep 样式文件\n请在 source/css/layout 文件夹里创建 Keep 样式文件，同上，在 source/css/layout/_partial 文件夹中创建 copyright-info.styl 样式文件。\n\n在 copyright-info.styl 文件中编写你的 CSS 样式代码，建议边修改边在浏览器查看效果。\n\n\n编写业务逻辑代码如果你想添加的功能业务逻辑比较复杂，请在 source/js/utils.js 这个 JS 文件里面编写，或新建一个单独 JS 文件。\n注意，你新建的 JS 文件别忘了引入，可在 layout/_partial/scripts.ejs 文件中统一管理。\n提交代码当你想要添加的功能模块开发完毕之后，请检查一下有无 Bug，确认无误后，commit 并且 push 到你的 GitHub 仓库。\n发起 Pull Request当你 GitHub 上的 Keep 仓库有代码更新，便可向作者的 Keep 仓库发起一个 Pull Request，然后填写描述信息，等待作者合并代码。\n参考链接\nHexo 主题 https://hexo.io/zh-cn/docs/themes\nHexo 模板 https://hexo.io/zh-cn/docs/templates\nHexo 插件 https://hexo.io/zh-cn/docs/plugins\nHexo 变量 https://hexo.io/zh-cn/docs/variables\n\n","categories":["Keep教程"],"tags":["Keep","贡献指南"]},{"title":"Keep 平滑升级指南","url":"/2020/11/Keep-%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97/","content":"\n待更新…\n\n","categories":["Keep教程"],"tags":["Keep","升级指南"]},{"title":"使用 GitHub Actions 自动部署 Hexo 静态博客","url":"/2021/03/%E4%BD%BF%E7%94%A8-GitHub-Action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-Hexo-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/","content":"我们搭建个人博客的初衷，不就是为了能好好地写文章吗？一切重复且枯燥的工作都应该交给程序去自动完成，尤其是静态博客编译和部署，我们只需要专注文字。\n\n\n什么是 GitHub ActionsGitHub Actions 是 GitHub 的持续集成服务。持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。\n很多操作在不同项目里面是类似的，完全可以共享。GitHub 允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。\n如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。\n本例就使用由 theme-keep 组织提供的 action hexo-deploy-github-pages-action 来自动部署 Hexo。\n使用 GitHub Actions 自动部署的好处\n可以直接在线编辑 md 文件，立即生效。假设你已发布一篇文章，过几天你在别的电脑上浏览发现有几个明显的错别字，这是完全不能容忍的。但此时你电脑上又没有 hexo + node.js + git 等完整的开发环境，重新配置开发环境明显不现实。如果使用 CI，你可以直接用浏览器访问 GitHub 上的项目仓库，直接编辑带错别字的 md 文章，改完，在线提交，稍等片刻，你的网站就自动更新了。\n\n如果手动部署，需要先执行 hexo g 编译生成静态文件， 然后推送 public 整个文件夹到 GitHub 上，当后期网站文章、图片较多时候，很多时候连接 GitHub 不是那么顺畅，经常要傻等很长的上传时间。使用 GitHub Actions 自动部署，你只需 push _post 文件里单独的 md 文件即可，其他不用管，效率瞬间高了许多，其中的好处，谁用谁知道。\n\n使用 GitHub Actions，你还可以一次性将这些静态博客页面部署到多个服务器上，例如：GitHub Pages、Gitee pages、七牛云、阿里云、腾讯云等等。\n\n…\n\n\n准备工作本文以 Hexo + Keep 主题搭建博客为例，教你如何使用 GitHub Actions 将博客自动部署到 GitHub Pages。\n创建 GitHub 仓库创建两个 GitHub 仓库，一个公共仓库和一个私有仓库。\n\n私有仓库用来存储 Hexo 项目源代码。（保证你的重要信息不泄露）\n\n\n公共仓库用来存储编译之后的静态页面。\n\n\n\n本例：\n\n用私有仓库的 master 分支来存储项目源代码。\n用公共仓库的 gh-pages 分支 来存储静态页面。\n\n当私有仓库的 master 有内容 push 进来时（例如：主题文件，文章 md 文件、图片等）， 会触发 GitHub Actions 自动编译并部署到公共仓库的 gh-pages 分支。\n创建 GitHub Token创建一个有 repo 和 workflow 权限的 GitHub Token 。\n\n新生成的 Token 只会显示一次，如有遗失，重新生成即可。\n\n创建 repository secret将上面生成的 Token 添加到私有仓库的 Secrets 里，并将这个新增的 secret 命名为 HEXO_DEPLOY （名字无所谓，看你喜欢）。\n步骤：私有仓库 -&gt; settings -&gt; Secrets -&gt; New repository secret。\n\n\n新创建的 secret HEXO_DEPLOY 在 Actions 配置文件要用到，需跟配置文件保持一致！\n\n添加 Actions 配置文件\n在你的 Hexo 项目根目录下创建 .github 文件夹。\n在 .github 文件夹下创建 workflows 文件夹。\n在 workflows 文件夹下创建 hexo-deploy.yml 文件。\n\n\nhexo-deploy.yml 文件的内容如下：\nname: deploying Hexo project to GitHub pageson:  push:    branches:      - master # master 分支有 push 行为时就触发这个 actionjobs:  build-and-deploy:    runs-on: ubuntu-latest    steps:      - name: Checkout        uses: actions/checkout@master      - name: Build and Deploy        uses: theme-keep/hexo-deploy-github-pages-action@master # 使用专门部署 Hexo 到 GitHub pages 的 action        env:          PERSONAL_TOKEN: $&#123;&#123; secrets.HEXO_DEPLOY &#125;&#125; # secret 名          PUBLISH_REPOSITORY: XPoet/keep-blog # 公共仓库，格式：GitHub 用户名/仓库名          BRANCH: gh-pages # 分支，填 gh-pages 就行          PUBLISH_DIR: ./public # 部署 public 目录下的文件\n\n\n在上面的配置文件中，使用了 theme-keep 组织封装的 hexo-deploy-github-pages-action ，是一款专门部署 Hexo 博客到 GitHub pages 的 action，欢迎大家 Star 和 Fork\n\n至此，准备工作完毕~\n自动部署触发流程\n修改你的 Hexo 博客源代码（例如：增加文章、修改文章、更改主题、修改主题配置文件等等）。\n\n把你修改过的 Hexo 项目内容（只提交修改过的那部分内容） push 到 GitHub 公共仓库（本例：keep-site-source）的 master 分支。\n\nGitHub Actions 检测到 master 分支有内容 push 进来，会自动执行 action 配置文件的命令，将 Hexo 项目编译成静态页面，然后部署到私有仓库的 gh-pages 分支。\n\ngh-pages 分支是 GitHub Pages 服务的固定分支，你只需在 hexo-deploy.yml 文件正确填写，会自动创建。\n\n\n在私有仓库的 Actions 可以查看到你配置的 action。\n\n通过 GitHub Actions 自动部署成功的效果图：\n\n\n类似工具除了 GitHub Actions，我们还可以使用 Travis CI 来实现 Hexo 自动部署，效果是一样的，任君选择。\n教程：使用 Travis CI 自动部署 Hexo 静态博客\n","categories":["Hexo 教程"],"tags":["Keep","Hexo","GitHub Actions"]},{"title":"使用 Travis CI 自动部署 Hexo 静态博客","url":"/2020/11/%E4%BD%BF%E7%94%A8-Travis-CI-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-Hexo-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/","content":"我们搭建个人网站的初衷，不就是为了能好好地写博客吗？一切重复且枯燥的工作都应该交给程序去自动完成，尤其是静态博客，我们只需要专注文字。\n\n\n什么是 CICI(Continuous Integration) 翻译为持续集成。Travis CI 是一个提供持续集成功能的平台，Github 可关联 Travis CI，当 GitHub 仓库有代码 push 时，会推送通知到 Travis CI，根据设置的脚本运行指定任务。\n使用 CI 自动部署的好处\n可以直接在线编辑 md 文件，立即生效。假设你已发布一篇文章，过几天你在别的电脑上浏览发现有几个明显的错别字，这是完全不能容忍的。但此时你电脑上又没有 hexo + node.js + git 等完整的开发环境，重新配置开发环境明显不现实。如果使用 CI，你可以直接用浏览器访问 GitHub 上的项目仓库，直接编辑带错别字的 md 文章，改完，在线提交，稍等片刻，你的网站就自动更新了。\n\n手动部署需要推送 public 整个文件夹到 GitHub 上，当后期网站文章、图片较多时候，很多时候连接 GitHub 不是那么顺畅，经常要傻等很长的上传时间。有了 CI，你可以只提交 post 文件里单独的 md 文件即可，很快很爽，谁用谁知道。\n\n使用 CI，你可以一次性将这些静态博客页面部署到多个服务器上，例如：GitHub Pages、七牛云、阿里云等。\n\n…\n\n\n搭建流程本文以 Hexo + Keep 搭建的静态网站为例，教你如何使用 Travis CI 自动部署到 GitHub Pages 服务器。\n新建 GitHub 仓库创建一个用来存储 Hexo 项目源代码和静态页面的GitHub 仓库\n\n备注：选公有仓库和私有仓库都可以，但 Travis CI 只对 GitHub 的 public 仓库免费。\n例如：本文案例仓库 keep-site。\n\n用 main 分支 来存储 hexo 博客项目源代码。\n用 gh-pages 分支 存储来编译生成后静态页面。\n\n当 main 分支的源代码（主题文件，文章 md 文件、图片等）有变动时，CI 会自动编译并部署到 gh-pages 分支。\n新建 GitHub Token创建一个有 repo 权限的 GitHub Token 。\n\n新生成的 Token 只会显示一次，如有遗失，重新生成即可。\n\n添加 .travis.yml在你的 Hexo 博客项目文件夹下添加 Travis CI 的配置文件 .travis.yml。\n\n.travis.yml 文件的内容如下：\n# 编译环境、语言dist: xenialos: linuxlanguage: node_js# Node.js 版本node_js:  - 12branches:  only:    - main                      # 只有 main 分支检出更改才触发 CIbefore_install:  - export TZ=&#x27;Asia/Shanghai&#x27;   # 配置时区为东八区 UTC+8  - npm install hexo-cli        # 安装 hexoinstall:  - npm install                 # 安装 hexo 项目相关的依赖# 执行脚本 script:                           - hexo clean                  # 清除 hexo 缓存  - hexo generate               # 生成静态文件deploy:  on:    branch: main                # 工作分支  strategy: git  provider: pages  skip_cleanup: true            # 跳过清理  token: $GH_TOKEN              # GitHub Token 变量  keep_history: true            # 保持推送记录，以增量提交的方式  local_dir: public             # 需要推送到 gh-pages 分支的静态文件目录  target_branch: gh-pages       # 推送的目标文件夹 local_dir(public) -&gt; gh-pages 分支\n\nTravis CI 关联项目仓库\n使用 GitHub 账号登录 Travis CI 官网，关联你的 hexo 博客项目仓库，并绑定前面生成的 GitHub Token。\n\n点击右上角头像，选择 “Settings”。\n\n在所列出来的仓库里找到你的 hexo 项目仓库，点击 “Settings” 。如果仓库过多，可以直接搜索。\n\n增加环境变量，GH_TOKEN 的值填你在前面生成的 GitHub Token，最后点击 “Add” 添加。\n\n\n使用流程修改源代码文件在你的 hexo 项目文件夹下，修改你的文章、图片、主题等。\npush 到仓库将你的 hexo 项目代码 push 到 GitHub 仓库的 main 分支，Travis CI 检测到 main 分支代码有变动，会自动执行脚本命令，将 hexo 项目编译生成静态页面，部署到 gh-pages 分支。\n备注：gh-pages 分支是 GitHub Pages 服务的固定分支，你只需在 .travis.yml 文件正确填写，会自动创建。\n使用自定义域名访问你可以使用自己的域名来访问 GitHub Pages 服务，只需在 hexo 项目的 source 目录下添加 CNANE 文件。\nCNANE 文件内容参考如下：\nkeep.xpoet.cn\n\n\n开启 https下图是 Travis CI 自动部署到 gh-pages 分支 成功的效果。\n\n我们可在仓库 Settings 开启域名 https 协议。\n\n至此，使用 Travis CI 自动部署 Hexo 静态博客到 GitHub Pages 教程完毕，有任何问题，欢迎在评论区留言。\n","categories":["Hexo 教程"],"tags":["Keep","Hexo","Travis CI"]}]